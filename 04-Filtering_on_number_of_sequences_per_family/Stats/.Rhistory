library(readr)
Archaea_number_of_sequences_per_family <- read_delim("Archaea_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Archaea_number_of_sequences_per_family)
library(readr)
Bacteria_number_of_sequences_per_family <- read_delim("Bacteria_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Bacteria_number_of_sequences_per_family)
library(readr)
Eukaryota_number_of_sequences_per_family <- read_delim("Eukaryota_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Eukaryota_number_of_sequences_per_family)
data <- rbind(Archaea_number_of_sequences_per_family, Bacteria_number_of_sequences_per_family, Eukaryota_number_of_sequences_per_family)
summary(data)
(105.1+2299+156.1)/3
library(readr)
Archaea_number_of_sequences_per_family <- read_delim("Archaea_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Archaea_number_of_sequences_per_family)
library(readr)
Bacteria_number_of_sequences_per_family <- read_delim("Bacteria_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Bacteria_number_of_sequences_per_family)
library(readr)
Eukaryota_number_of_sequences_per_family <- read_delim("Eukaryota_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Eukaryota_number_of_sequences_per_family)
summary(Archaea_number_of_sequences_per_family)
summary(Bacteria_number_of_sequences_per_family)
summary(Eukaryota_number_of_sequences_per_family)
summary(rbind(Archaea_number_of_sequences_per_family, Bacteria_number_of_sequences_per_family, Eukaryota_number_of_sequences_per_family))
library(readr)
Archaea_number_of_sequences_per_family <- read_delim("Archaea_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, col_types = cols(Number_of_sequences = col_number()),
trim_ws = TRUE)
View(Archaea_number_of_sequences_per_family)
summary(Archaea_number_of_sequences_per_family)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("~/Database_3D_proteins/6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("~/Database_3D_proteins/6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
df <- Evaluation_scores_Archaea_simple
nrow(df %>% filter(Gap_score < 0.55))/nrow(df)
library(dplyr)
nrow(df %>% filter(Gap_score < 0.55))/nrow(df)
nrow(df %>% filter(Gap_score < 0.6))/nrow(df)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("~/Database_3D_proteins/6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
View(Evaluation_scores_Archaea_simple)
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("~/Database_3D_proteins/6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Bacteria_simple)
library(readr)
Evaluation_scores_Eukaryota_simple <- read_delim("~/Database_3D_proteins/6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Eukaryota_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Eukaryota_simple)
View(Evaluation_scores_Eukaryota_simple)
df1 <- Evaluation_scores_Bacteria_simple
library(dplyr)
nrow(df1 %>% filter(Gap_score < 0.6)) / nrow(df1)
(nrow(df1 %>% filter(Gap_score < 0.6)) / nrow(df1)) * nrow(df1)
librayr(ggplot2)
librayry(ggplot2)
library(ggplot2)
ggplot(df1, aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(df1 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
df2 <- Evaluation_scores_Eukaryota_simple
nrow(df2 %>% filter(Gap_score < 0.6))
nrow(df2 %>% filter(Gap_score < 0.6))/nrow(df2)
ggplot(df2, aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(df2 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("~/Database_3D_proteins/6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
df3 <- Evaluation_scores_Archaea_simple
ggplot(df1 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(df2 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(df3 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(df1 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red") + labs(title="Distribution of gap score depending on the number of sequences for Bacteria")
ggplot(df2 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red") + labs(title="Distribution of gap score depending on the number of sequences for Eukaryota")
ggplot(df3 %>% filter(Gap_score < 0.6), aes(Family_name, Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red") + labs(title="Distribution of gap score depending on the number of sequences for Archaea")
library(ggplot2)
library(dplyr)
library(forcats)
library(cowplot)
order <- "Bacteria"
method <- "simple"
data <- read.csv(paste0("./csvs/Evaluation_scores_", order, "_", method, ".csv"), sep = ";", header = TRUE) %>%
mutate(Family_name = fct_reorder(Family_name, desc(Gap_score)),
Number_sequences = as.numeric(Number_sequences),
Number_sites = as.numeric(Number_sites),
Gap_score = as.numeric(Gap_score))
data <- read.csv(paste0("../6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_", order, "_", method, ".csv"), sep = ";", header = TRUE) %>%
mutate(Family_name = fct_reorder(Family_name, desc(Gap_score)),
Number_sequences = as.numeric(Number_sequences),
Number_sites = as.numeric(Number_sites),
Gap_score = as.numeric(Gap_score))
data <- read.csv(paste0("../../6-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_", order, "_", method, ".csv"), sep = ";", header = TRUE) %>%
mutate(Family_name = fct_reorder(Family_name, desc(Gap_score)),
Number_sequences = as.numeric(Number_sequences),
Number_sites = as.numeric(Number_sites),
Gap_score = as.numeric(Gap_score))
plot1 <- ggplot(data, aes(x = Family_name, y = Gap_score)) +
geom_col(aes(color = Gap_score)) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = paste("Distribution of the gap score for", order),
x = "Family name",
y = "Gap score")
plot2 <- ggplot(data, aes(y = Gap_score)) +
geom_smooth(aes(x = log10(Number_sequences), color = "Number of sequences")) +
geom_smooth(aes(x = log10(Number_sites), color = "Number of sites")) +
labs(title = "Gap score depending on the number of sequences or sites",
x = "Number of sequences/sites",
y = "Gap score")
plot_grid(plot1, plot2, ncol = 1, nrow = 2, labels = c("A", "B"))
ggsave(paste0("./Distribution gap score ", order, "_", method, ".png"), width = 10, height = 7, dpi = 300)
