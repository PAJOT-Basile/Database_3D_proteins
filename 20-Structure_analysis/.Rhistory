install.packages(c("tidyverse", "readr", "stringr"))
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Bacteria_simple)
library(dplyr)
df <- Evaluation_scores_Bacteria_simple %>% filter(Gap_score < 0.6)
View(df)
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Bacteria_simple)
library(dplyr)
df <- Evaluation_scores_Bacteria_simple %>% filter(Gap_score < 0.6)
library(ggplot2)
View(df)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
df <- Evaluation_scores_Archaea_simple %>% filter(Gap_score < 0.6)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
df_Archaea <- Evaluation_scores_Archaea_simple
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Bacteria_simple)
df_Bacteria <- Evaluation_scores_Bacteria_simple
rm(Evaluation*)
rm(Evaluation_scores_Archaea_simple, Evaluation_scores_Bacteria_simple)
library(readr)
Evaluation_scores_Eukaryota_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Eukaryota_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Eukaryota_simple)
df_Eukaryota <- Evaluation_scores_Eukaryota_simple
rm(Evaluation_scores_Eukaryota_simple)
View(df_Archaea)
View(df_Bacteria)
View(df_Eukaryota)
library(dplyr)
library5(ggplot2)
library(ggplot2)
df_Archaea %>% filter(Gap_score < 0.6)
df_Archaea <- df_Archaea %>% filter(Gap_score < 0.6)
df_Bacteria <- df_Bacteria %>% fillter(Gap_score < 0.6)
df_Bacteria <- df_Bacteria %>% filter(Gap_score < 0.6)
df_Eukaryota <- df_Eukaryota %>% filter(Gap_score < 0.6)
df_Archaea <- df_Archaea %>% filter(Gap_score < 0.6) %>% sort(Number_sequences)
df_Archaea <- df_Archaea %>% filter(Gap_score < 0.6) %>% arrange(Number_sequences)
df_Archaea <- df_Archaea %>% filter(Gap_score < 0.6) %>% arrange(desc(Number_sequences))
df_Bacteria <- df_Bacteria %>% filter(Gap_score < 0.6) %>% arrange(desc(Number_sequences))
df_Eukaryota <- df_Eukaryota %>% filter(Gap_score < 0.6) %>% arrange(desc(Number_sequences))
nrow(df_Bacteria %>% filter(Number_sequences < 200))
5912 - 1911
nrow(df_Eukaryota %>% filter(Number_sequences < 200))
4001 + (7573 - 6910)
nrow(df_Archaea %>% filter(Number_sequences < 200))
4001 + (7573 - 6910) + (957 - 812)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
library(dplyr)
df <- Evaluation_scores_Archaea_simple %>% filter(Gap_score < 0.6)
nrow(df)
head(Evaluation_scores_Archaea_simple %>% filter(Gap_score > 0.6))
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("Database_3D_proteins/06-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("Database_3D_proteins/07-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Bacteria_simple)
df1 <- Evaluation_scores_Bacteria_simple %>% filter(Gap_score < 0.6)
View(df1)
library(readr)
df3 <- read_delim("Database_3D_proteins/07-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Eukaryota_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df3)
df3 <- df3 %>% filter(Gap_score < 0.6)
View(df1)
nrow(rbind(df, df1, df3))
library(readr)
Bacteriatester <- read_delim("Database_3D_proteins/Bacteriatester.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Bacteriatester)
View(df1)
df4<-merge(df1, Bacteriatester, by.x = "Family_name", by.y = "Fam_name", all = TRUE) %>% filter(Is_present != "OK")
View(df4)
df4<-merge(df1, Bacteriatester, by.x = "Family_name", by.y = "Fam_name", all = TRUE)
View(df4)
df4<-merge(df1, Bacteriatester, by.x = "Family_name", by.y = "Fam_name")
diff(sort(Bacteriatester$Fam_name), sort(df1$Family_name))
?diff
setdiff(sort(Bacteriatester$Fam_name), sort(df1$Family_name))
n_occur <- data_frame(table(df1$Family_name))
n_occur <- tibble(table(df1$Family_name))
n_occur[n_occur$`table(df1$Family_name)` > 1]
View(n_occur)
n_occur[n_occur$`table(df1$Family_name)` > 1,]
library(readr)
df <- read_delim("Database_3D_proteins/07-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
df %>% filter(Family_name == "CLU_000167_16_11")
library(dplyr)
library(ggplot2)
df %>% filter(Family_name == "CLU_000167_16_11")
df %>% filter(Number_sequences > 50000)
df %>% filter(Number_sequences > 50000,)
df %>% filter(Number_sequences > 50000, Gap_score < 0.6)
df %>% filter(Family_name == "CLU_056160_2_1")
df %>% filter(Family_name == "CLU_071589_0_1")
df %>% filter(Family_name == "CLU_098841_0_1")
df %>% filter(Number_sequences > 10000, Gap_score < 0.6)
df %>% filter(Number_sequences > 15000, Gap_score < 0.6)
df %>% filter(Family_name == "CLU_104295_1_2")
df %>% filter(Family_name == "CLU_122625_1_3")
library(readr)
df <- read_delim("Database_3D_proteins/07-Filtering_sequences_on_their_quality/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(dplyr)
df %>% filter(Gap_score < 0.6, Number_sequences > 50000)
df %>% filter(Family_name == "CLU_148498_0_0")
exp(6)
exp(8)
library(readr)
df <- read_delim("Database_3D_proteins/0-tests/Stats/Archaea_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df)
max(df$Number_of_sequences)
min(df$Number_of_sequences)
library(readr)
df1 <- read_delim("Database_3D_proteins/0-tests/Stats/Bacteria_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
min(df1$Number_of_sequences)
max(df1$Number_of_sequences)
library(readr)
df2 <- read_delim("Database_3D_proteins/0-tests/Stats/Eukaryota_number_of_sequences_per_family.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
min(df2$Number_of_sequences)
max(df2$Number_of_sequences)
View(df1)
View(df2)
exp(8)
library(ggplot2)
ggplot(df, aes(x=Family_name, y=Number_of_sequences))+
geom_point(aes(col=Number_of_sequences))
ggplot(df1, aes(x=Family_name, y=Number_of_sequences, col=Number_of_sequences)) + geom_point()
ggplot(df2, aes(x=Family_name, y=Number_of_sequences, col=Number_of_sequences)) + geom_point()
sum(df$Number_of_sequences)
sum(df1$Number_of_sequences)
sum(df2$Number_of_sequences)
library(readr)
dfArchaea <- read_delim("Database_3D_proteins/0-tests/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
dfBacteria <- read_delim("Database_3D_proteins/0-tests/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
dfEukaryota <- read_delim("Database_3D_proteins/0-tests/csvs/Evaluation_scores_Eukaryota_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(dfArchaea)
View(dfBacteria)
View(dfEukaryota)
View(dfBacteria)
View(dfEukaryota)
ggplot(dfArchaea, aes(x=Family_name, y=Gap_score, col=Number_sequences)) + geom_point()
ggplot(dfArchaea, aes(x=Family_name, y=Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(dfBacteria, aes(x=Family_name, y=Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(dfEukaryota, aes(x=Family_name, y=Gap_score, col=Number_sequences)) + geom_point()
ggplot(dfEukaryota, aes(x=Family_name, y=Gap_score, col=Number_sequences)) + geom_point() + scale_color_continuous(low="blue", high="red")
ggplot(dfBacteria, aes(x=Number_sequences, y=Gap_score)) + geom_point()
ggplot(dfEukaryota, aes(x=Number_sequences, y=Gap_score)) + geom_point()
ggplot(dfArchaea, aes(x=Number_sequences, y=Gap_score)) + geom_point()
lm(Gap_score~Number_sequences, data=dfBacteria)
anova(lm(Gap_score~Number_sequences, data=dfBacteria))
qqplot(anova(lm(Gap_score~Number_sequences, data=dfBacteria))$residuals)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
qqnorm(anova(lm(Gap_score~Number_sequences, data=dfBacteria))$residuals, pch=1)
A <-anova(lm(Gap_score~Number_sequences, data=dfBacteria))
A$`Pr(>F)`
A
A <-aov(lm(Gap_score~Number_sequences, data=dfBacteria))
A
qqplot(A$residuals)
qqplot(A$residuals, A$df.residual)
qqnorm(A$residuals, pch=1, frame=FALSE)
qqline(A$residuals, col ="blue", lwd=2)
shapiro.test(A$residuals)
mod_lin <- lm(Gap_score~Number_sequences, data=dfBacteria)
qqplot(mod_lin$residuals)
qqplot(mod_lin$residuals, frame=FALSE)
qqplot(mod_lin$residuals, pch=1, frame=FALSE)
shapiro.test(mod_lin$residuals)
mod_lin$residuals
mod_lin <- lm(Gap_score~Number_sequences, data=dfArchaea)
shapiro.test(mod_lin$residuals)
anova(mod_lin)
mod_lin <- lm(Gap_score~Number_sequences, data=dfBacteria)
anova(mod_lin)
mod_lin <- lm(Gap_score~Number_sequences, data=dfEukaryota)
anova(mod_lin)
nrow(dfArchaea %>% filter(Gap_score<0.6))
nrow(dfBacteria %>% filter(Gap_score<0.6))
nrow(dfEukaryota %>% filter(Gap_score<0.6))
library(readr)
df <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df)
library(readr)
df1 <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df1)
library(readr)
df2 <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Eukaryota_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df2)
ggplot(df, aes(x=Family_name, y=Gap_score)) + geom_point(aes(col=Number_sequences)) + scale_color_continuous(low='blue', high='red')
ggplot(df1, aes(x=Family_name, y=Gap_score)) + geom_point(aes(col=Number_sequences)) + scale_color_continuous(low='blue', high='red')
ggplot(df2, aes(x=Family_name, y=Gap_score)) + geom_point(aes(col=Number_sequences)) + scale_color_continuous(low='blue', high='red')
ggplot(df1, aes(Gap_score, Number_sequences)) + geom_point()
ggplot(df2, aes(Gap_score, Number_sequences)) + geom_point()
ggplot(df, aes(Gap_score, Number_sequences)) + geom_point()
library(dplyr)
library(ggplot2)
pwd9()
pwd()
getwd()
df_after_similar_Archaea <- read.csv("/home/bpajot/Database_3D_proteins/08-Filtering_similar_sequences/Statistics/csvs/Evaluation_scores_Archaea_simple.csv", header = TRUE, sep = ";", dec = ".")
df_after_similar_Bacteria <- read.csv("/home/bpajot/Database_3D_proteins/08-Filtering_similar_sequences/Statistics/csvs/Evaluation_scores_Bacteria_simple.csv", header = TRUE, sep = ";", dec = ".")
df_after_similar_Eukaryota <- read.csv("/home/bpajot/Database_3D_proteins/08-Filtering_similar_sequences/Statistics/csvs/Evaluation_scores_Eukaryota_simple.csv", header = TRUE, sep = ";", dec = ".")
df_after_optim_Archaea <- read.csv("/home/bpajot/Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Archaea_simple.csv", header = TRUE, sep = ";", dec = ".")
df_after_optim_Bacteria <- read.csv("/home/bpajot/Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Bacteria_simple.csv", header = TRUE, sep = ";", dec = ".")
df_after_optim_Eukaryota <- read.csv("/home/bpajot/Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Eukaryota_simple.csv", header = TRUE, sep = ";", dec = ".")
ggplot(df_after_similar_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous('blue', 'red')
ggplot(df_after_similar_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_optim_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_optim_Archaea, aes(Family_name, Number_sequences))+geom_point()
ggplot(df_after_similar_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_optim_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_similar_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_optim_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_similar_Eukaryota, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
ggplot(df_after_optim_Eukaryota, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')
license
licence()
citation()
install.packages("tidyverse")
ggplot(df_after_similar_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Archaea after the similar filtration process")
ggplot(df_after_similar_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Archaea after the similar filtration process")
ggplot(df_after_similar_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Archaea after the similar filtration process")
ggplot(df_after_optim_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Archaea after the similar filtration process")
ggplot(df_after_similar_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Bacteria after the similar filtration process")
ggplot(df_after_optim_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Bacteria after the similar filtration process")
ggplot(df_after_similar_Eukaryota, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Eukaryota after the similar filtration process")
ggplot(df_after_optim_Eukaryota, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Eukaryota after the similar filtration process")
ggplot(df_after_similar_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Archaea after the similar filtration process")
ggplot(df_after_similar_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Bacteria after the similar filtration process")
ggplot(df_after_similar_Eukaryota, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Eukaryota after the similar filtration process")
ggplot(df_after_optim_Archaea, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Archaea after the optimisation process")
ggplot(df_after_optim_Bacteria, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Bacteria after the optimisation process")
ggplot(df_after_optim_Eukaryota, aes(Family_name, Gap_score, col = Number_sequences)) + geom_point() + scale_color_continuous(low='blue', high='red')+labs(title = "Gap score for number of sequences \nfor Eukaryota after the optimisation process")
exp(2)
exp(4)
exp(5)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Archaea_simple)
summary(Evaluation_scores_Archaea_simple)
library(readr)
Evaluation_scores_Bacteria_simple <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Bacteria_simple)
summary(Evaluation_scores_Bacteria_simple)
ggplot(Evaluation_scores_Bacteria_simple, aes(Family_name, Gap_score, col=Number_sequences)) + geom_point()+scale_color_continuous(low='blue', high='red')
nrow(Evaluation_scores_Bacteria_simple %>% filter(Number_sequences < 200))
nrow(Evaluation_scores_Bacteria_simple %>% filter(Number_sequences < 100))
nrow(Evaluation_scores_Archaea_simple %>% filter(Number_sequences>100))
nrow(Evaluation_scores_Bacteria_simple %>% filter(Number_sequences > 100))
library(readr)
Evaluation_scores_Eukaryota_simple <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/Statistics/csvs/Evaluation_scores_Eukaryota_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Evaluation_scores_Eukaryota_simple)
nrow(Evaluation_scores_Eukaryota_simple %>% filter(Number_sequences > 100))
nrow(Evaluation_scores_Eukaryota_simple %>% filter(Number_sequences > 100))/nrow(Evaluation_scores_Eukaryota_simple)
library(readr)
Alignment_speeds <- read_delim("Database_3D_proteins/10-First_alignment_of_sequences/Alignment_speeds.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(Alignment_speeds)
ggplot(Alignment_speeds, aes(Number_sequences, Time, col = Method))+geom_smooth()
ggplot(Alignment_speeds, aes(Number_sequences, Time, col = Method))+geom_point()
ggplot(Alignment_speeds, aes(Number_sequences, Time, col = Method))+geom_line()
ggplot(Alignment_speeds, aes(Sequence_length_after_alignment, Time, col = Method))+geom_line()
ggplot(Alignment_speeds, aes(Seq_length_after_alignment, Time, col = Method))+geom_line()
ggplot(Alignment_speeds, aes(Seq_length_after_alignment, Time, col = Method))+geom_smooth()
ggplot(Alignment_speeds, aes(Mean_seq_length, Time, col = Method))+geom_smooth()
ggplot(Alignment_speeds, aes(Mean_seq_length, Time, col = Method))+geom_line()
library(readr)
Evaluation_scores_Archaea_simple <- read_delim("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
df <- Evaluation_scores_Archaea_simple
library(dplyr)
nrow(df %>% filter(Number_sequences > 3))
View(df)
library(ggplot2)
ggplot(df, aes(x=Family_name, Number_sequneces, col-Number_sites))+geom_point()
ggplot(df, aes(x=Family_name, Number_sequences, col-Number_sites))+geom_point()
summary(df)
df1 <- read.csv("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/csvs/Evaluation_scores_Bacteria_simple.csv", sep = ";", header=TRUE)
summary(df1)
ggplot(df1, aes(x=Family_name, Number_sequences, col=Number_sites))+geom_point()
ggplot(df1, aes(x=Family_name, Number_sequences, col=Number_sites))+geom_point()+scale_color_continuous(low='antiquewhite', high='red')
df2 <- read.csv("Database_3D_proteins/09-Optimising_alignment_to_reduce_number_of_sequences/csvs/Evaluation_scores_Eukaryota_simple.csv", sep = ";", header=TRUE)
summary(df2)
ggplot(df2, aes(x=Family_name, Number_sequences, col=Number_sites))+geom_point()+scale_color_continuous(low='antiquewhite', high='red')
ggplot(df, aes(x=Family_name, Number_sequences, col=Number_sites))+geom_point()+scale_color_continuous(low='antiquewhite', high='red')
summary(df)
df <- df %>% mutate(order=Archaea)
df <- df %>% mutate(order="Archaea")
df1 <- df1 %>% mutate(order="Bacteria")
df2 <- df2 %>% mutate(order="Eukaryota")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot()
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=log(Number_sequences)))+geom_boxplot()
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot()
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(col=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences") + geom_point(aes(col=Gap_score, alpha = 0.2))
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(col=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences") + geom_point(aes(col=Gap_score, alpha = 0.2))+scale_color_continuous(low="antiquewhite", high='red')
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(col=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point()
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(alpha = 0.2)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(alpha = 0.2))
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(alpha = 0.002))
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(alpha = 0.002)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(alpha = 0.02)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_violin()
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_violin(aes(fill=order), alpha=0.02)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_violin(aes(col=order), alpha=0.02)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_boxplot(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_violin(aes(fill=order), alpha=0.02)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(y=Number_sequences, col=Number_gaps), alpha=0.02)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(y=Number_sequences, col=Gap_score), alpha=0.02)
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(y=Number_sequences, col=Gap_score), alpha=0.02) + scale_color_continuous(low="antiquewhite", high="red")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(y=Number_sequences, col=Gap_score), alpha=0.02) + scale_alpha_continuous()
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(y=Number_sequences, col=Gap_score), alpha=0.02) + scale_alpha_continuous()+scale_color_continuous(low="blue", high="red")
rbind(df, df1, df2) %>% ggplot(aes(x=order, y=Number_sequences))+geom_violin(aes(fill=order))+labs(title = "Distribution of number of sequences per Super-Kingdom", x="Order", y="Number of sequences")+geom_point(aes(y=Number_sequences, col=Gap_score), alpha=0.02) +scale_color_continuous(low="blue", high="red")
library(readr)
df <- read_delim("Database_3D_proteins/08-Filtering_similar_sequences/csvs/Evaluation_scores_Archaea_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df)
library(readr)
df <- read_delim("Database_3D_proteins/08-Filtering_similar_sequences/csvs/Evaluation_scores_Bacteria_simple.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df)
1-1/1024
1-1/438
# Libraries
library(dplyr)
library(ggplot2)
library(readr)
test <- read_delim("Database_3D_proteins/test.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(test)
summary(test %>% group_by(Method) %>% summarise(mean(Time)))
summary(test %>% group_by(as.factor(Method) %>% summarise(mean(Time)))
)
summary(test %>% group_by(as.factor(Method)) %>% summarise(mean(Time)))
test %>% group_by(as.factor(Method)) %>% summarise(mean(Time))
ggplot(test, aes(x=Method, y=Time, fill=Method)) + geom_boxplot()
ggplot(test, aes(x=Method, y=log10(Time), fill=Method)) + geom_boxplot()
ggplot(test, aes(Number_sequences, Time)) + geom_line(aes(col = Method)))
ggplot(test, aes(Number_sequences, Time)) + geom_line(aes(col = Method))
ggplot(test, aes(Number_sequences, Time)) + geom_smooth(aes(col = Method))
ggplot(test, aes(Number_sequences, Time, col = Method)) + geom_smooth(aes(col = Method))
ggplot(test, aes(Number_sequences, Time, col = Method)) + geom_smooth()
ggplot(test, aes(Number_sequences, Time, col = Method)) + geom_point()
test <- test %>% mutate(Coverage = Maximum_seq_length - Minimum_seq_length)
ggplot(test, aes(Coverage, Time, col = Method)) + geom_point()
ggplot(test, aes(Seq_length_after_alignment, Time, col = Method)) + geom_point()
help("strsplit")
library(readr)
library(dplyr)
str_split_fixed
library(stringr)
help("str_split")
getwd()
df <- read.table("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt")
df <- read.table("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = " ")
df <- read.table("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = "\t")
df <- read.table("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = "\t", row.names = c("pos", "node", "probAcc", "probDec", "probShift", "Sign"))
df <- read.table("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = "\t", row.names = c("pos", "node", "probAcc", "probDec", "probShift", "Sign"), header=TRUE)
df <- read.csv("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = "\t", row.names = c("pos", "node", "probAcc", "probDec", "probShift", "Sign"), header=TRUE)
df <- read.csv("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = "\t", header=TRUE)
View(df)
df <- read.csv("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/11-Raser_outputs/CLU_000422_3_3_nodes_results_file.txt", sep = " ", header=TRUE)
library(readr)
df <- read_delim("Database_3D_proteins/test.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(df)
library(ggplot2)
ggplot(df, aes(Number_sequences, Time, col=Method)) + geom_smooth()
ggplot(df, aes(Number_sequences, Time, col=Method)) + geom_line()
ggplot(df, aes(Number_sequences, Time, col=Method)) + geom_point()
ggplot(df, aes(Number_sequences, log(Time), col=Method)) + geom_point()
ggplot(df, aes(Number_sequences, log10(Time), col=Method)) + geom_point()
library(readr)
test_rev_post <- read_csv("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/12-PDB_filter/test_rev_post.csv")
View(test_rev_post)
library(readr)
test_infos <- read_csv("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/12-PDB_filter/test_infos.csv")
View(test_infos)
df <- read.csv("Downloads/sgedtools/examples/HOG000003295_charge_stats_pvalue_PDB_infos.tsv", sep = '\t', header = TRUE)
View(df)
df <- read.csv("Downloads/sgedtools/examples/HOG000003295_charge_stats_pvalue_PDB_infos.tsv", sep = '\t', header = TRUE)
library(readr)
test_infos <- read_csv("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/12-PDB_filter/test_infos.csv")
View(test_infos)
library(readr)
struct_info <- read_delim("Database_3D_proteins/Database_test/Archaea/CLU_000422_3_3/12-PDB_filter/struct_info.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(struct_info)
setwd("~/Database_3D_proteins/20-Structure_analysis/")
df <- read.csv("~/Database_3D_proteins/Database/Archaea/Archaea_structure_info.csv", header=TRUE, sep = ";") %>%
filter(!is.na(probability),
!is.na(SecondaryStructure))
# Libraries
require(dplyr)
library(dplyr)
require(ggplot2)
library(ggplot2)
require(stringr)
library(stringr)
require(readr)
library(lme4)
df <- read.csv("~/Database_3D_proteins/Database/Archaea/Archaea_structure_info.csv", header=TRUE, sep = ";") %>%
filter(!is.na(probability),
!is.na(SecondaryStructure))
code <- read.csv("~/Database_3D_proteins/20-Structure_analysis/DSSP_code.csv", header = TRUE, sep = ";")
df <- merge(df, code, by.x = "SecondaryStructure", by.y = "Code", all.x = TRUE)
df <- read.csv("~/Database_3D_proteins/Database/Bacteria/Bacteria_structure_info.csv", header=TRUE, sep = ";") %>%
filter(!is.na(probability),
!is.na(SecondaryStructure))
code <- read.csv("~/Database_3D_proteins/20-Structure_analysis/DSSP_code.csv", header = TRUE, sep = ";")
df <- merge(df, code, by.x = "SecondaryStructure", by.y = "Code", all.x = TRUE)
df %>%
ggplot(aes(x=probability, fill = Structure)) +
geom_histogram()#+
df %>%
ggplot(aes(x=probability, fill = Structure)) +
geom_histogram()+
facet_wrap(~Structure)
dftest <- df %>% mutate(SecondaryStructure = as.factor(SecondaryStructure),
test = ifelse(SecondaryStructure == "H" | SecondaryStructure == "G" | SecondaryStructure == "P" | SecondaryStructure == "I", "Helix",
ifelse(SecondaryStructure == "B" | SecondaryStructure == "E" | SecondaryStructure == "S", "Sheet",
ifelse(SecondaryStructure == "T", "Turn", "Other"))))
dftest  %>%
ggplot(aes(x=test, y=probability, fill = test)) +
geom_boxplot()
dftest  %>%
ggplot(aes(x=AlnPosition, y=probability, fill = test)) +
geom_col()+
facet_wrap(~test)
dftest %>%
ggplot(aes(x=test, y=Rsa, fill = test)) +
geom_boxplot()
mod <- glm(probability ~ Helix + Sheet + Turn + Other , data = dftest, family = "binomial")
mod <- glm(probability ~ test + Rsa , data = dftest, family = "binomial")
mod <- glm(probability ~ test + Rsa + Gene_family, data = dftest, family = "binomial")
summary(mod)
